{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mtp8\\\\source\\\\repos\\\\Magic\\\\magic-web\\\\src\\\\LoginForm.js\";\nimport React from 'react';\nimport InputField from './InputField';\nimport SubmitButton from './SubmitButton';\nimport UserStore from './Store/UserStore';\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      buttonDisabled: false\n    };\n  }\n\n  setInputValue(property, val) {\n    val = val.trim();\n\n    if (val.length > 12) {\n      return;\n    }\n\n    this.setState({\n      [property]: val\n    });\n  }\n\n  resetForm() {\n    this.setState({\n      username: '',\n      password: '',\n      buttonDisabled: false\n    });\n  }\n\n  async doLogin() {\n    if (!this.state.username) {\n      return;\n    }\n\n    if (!this.state.password) {\n      return;\n    }\n\n    this.setState({\n      buttonDisabled: true\n    });\n\n    try {\n      let res = await fetch('/login', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password\n        })\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      } else if (result && result.success == false) {\n        this.resetForm();\n        alert(result.msg);\n      }\n    } catch (e) {\n      console.log(e);\n      this.resetForm();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loginForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, \"Log In\", /*#__PURE__*/React.createElement(InputField, {\n      type: \"text\",\n      placeholder: \"Username\",\n      vale: this.state.username ? this.state.username : '' //OnChange= {(val) => this.setInputValue('username',val)}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(InputField, {\n      type: \"password\",\n      placeholder: \"Password\",\n      vale: this.state.password ? this.state.password : '' //OnChange= {(val) => this.setInputValue('password',val)}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(SubmitButton, {\n      text: \"Login\",\n      disbaled: this.state.buttonDisabled,\n      onClick: () => this.doLogin(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["C:/Users/mtp8/source/repos/Magic/magic-web/src/LoginForm.js"],"names":["React","InputField","SubmitButton","UserStore","LoginForm","Component","constructor","props","state","username","password","buttonDisabled","setInputValue","property","val","trim","length","setState","resetForm","doLogin","res","fetch","method","headers","body","JSON","stringify","result","json","success","isLoggedIn","alert","msg","e","console","log","render"],"mappings":"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","sourcesContent":["import React          from 'react';\r\nimport InputField     from './InputField';\r\nimport SubmitButton   from './SubmitButton';\r\nimport UserStore      from './Store/UserStore';\r\n\r\n\r\nclass LoginForm extends React.Component{\r\n\r\n  constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        username:'',\r\n        password:'',\r\n        buttonDisabled: false\r\n      }\r\n  }\r\n\r\n  setInputValue(property,val){\r\n      val = val.trim();\r\n      if(val.length>12){\r\n        return;\r\n      }\r\n      this.setState({\r\n        [property]: val\r\n      })\r\n  }\r\n\r\n  resetForm(){\r\n    this.setState({\r\n      username:'',\r\n      password:'',\r\n      buttonDisabled: false\r\n    })\r\n  }\r\n\r\n  async doLogin(){\r\n    if(!this.state.username){\r\n      return;\r\n    }\r\n    if(!this.state.password){\r\n      return;\r\n    }\r\n    this.setState({\r\n      buttonDisabled: true\r\n    })\r\n    try{\r\n      let res = await fetch('/login',{\r\n        method: 'post',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body:JSON.stringify({\r\n          username: this.state.username,\r\n          password: this.state.password\r\n        })\r\n      });\r\n      let result = await res.json();\r\n      if(result && result.success){\r\n        UserStore.isLoggedIn = true;\r\n        UserStore.username = result.username;\r\n      }\r\n      else if(result && result.success == false){\r\n        this.resetForm();\r\n        alert(result.msg);       \r\n      }\r\n    }\r\n    catch(e){\r\n      console.log(e);\r\n      this.resetForm();\r\n    }\r\n  }\r\n  render(){\r\n    return (\r\n      <div className=\"loginForm\">\r\n        Log In\r\n        <InputField\r\n          type='text'\r\n          placeholder = 'Username'\r\n          vale = {this.state.username ? this.state.username : ''}\r\n          //OnChange= {(val) => this.setInputValue('username',val)}\r\n        />\r\n\r\n        <InputField\r\n          type='password'\r\n          placeholder = 'Password'\r\n          vale = {this.state.password ? this.state.password : ''}\r\n          //OnChange= {(val) => this.setInputValue('password',val)}\r\n        />\r\n\r\n        <SubmitButton\r\n          text='Login'\r\n          disbaled = {this.state.buttonDisabled}\r\n          onClick={() => this.doLogin()}\r\n\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}